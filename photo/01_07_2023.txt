=============================================================================================
				GenericServlet class
=============================================================================================
GenericServlet class implements Servlet, ServletConfig and Serializable interfaces. It provides the implementation of all the methods of these interfaces except the service method.

GenericServlet class can handle any type of request so it is protocol-independent.

You may create a generic servlet by inheriting the GenericServlet class and providing the implementation of the service method.

Methods of GenericServlet class
-----------------------------------------------------------------------
There are many methods in GenericServlet class. They are as follows:
1.		public void init(ServletConfig config) is used to initialize the servlet.
2.		public abstract void service(ServletRequest request, ServletResponse response) provides 		service for the incoming request. It is invoked at each time when user requests for a 			servlet.
3.		public void destroy() is invoked only once throughout the life cycle and indicates that 		servlet is being destroyed.
4.		public ServletConfig getServletConfig() returns the object of ServletConfig.
5.		public String getServletInfo() returns information about servlet such as writer, 				copyright, version etc.
6.		public void init() it is a convenient method for the servlet programmers, now there is 		no need to call super.init(config)
7.		public ServletContext getServletContext() returns the object of ServletContext.
8.		public String getInitParameter(String name) returns the parameter value for the given 			parameter name.
9.		public Enumeration getInitParameterNames() returns all the parameters defined in the 			web.xml file.
10.	public String getServletName() returns the name of the servlet object.
11.	public void log(String msg) writes the given message in the servlet log file.
12.	public void log(String msg,Throwable t) writes the explanatory message in the servlet 			log file and a stack trace
==============================================================================================
Servlet Example by inheriting the GenericServlet class
----------------------------------------------------------------------------------------------
Let's see the simple example of servlet by inheriting the GenericServlet class.
Example of Functional and General Interrface
-------------------------------------------
@FunctionalInterface
interface Printable
{
	public void fun1();
	//public void fun2();
}
class Student implements Printable
{
	public void fun1()
	{
		System.out.println("Hello fun1");
	}
	public void fun2()
	{
		System.out.println("Hello fun2");
	}
}
public class InterfaceExample extends Student
{
	public void fun1()
	{
		System.out.println("Hello");
	}
	public static void main(String[] args)
	{
		InterfaceExample ie=new InterfaceExample();
		ie.fun1();
	}
}



Generic Sevlet Example:
--------------------------
package controller;
import javax.servlet.*;
import java.io.*;

public class GenericServletExample extends GenericServlet
{
    public void service(ServletRequest request,ServletResponse response)throws IOException
    {
        PrintWriter out=response.getWriter();
        response.setContentType("text/html");
        
        //out.print("<form>");
            out.print("<button onclick='counter();'>Count</button>");
        //out.print("</form>");
        
        out.print("<purushottam id='count'></purushottam>");
        
        out.print("<script>");
            out.print("var count=0;");
            out.print("function counter(){");
                out.print("count++;");
                out.print("document.getElementById('count').innerHTML=count;");
            
            out.print("}");
        
        out.print("</script>");
    }
   
}


==============================================================================================
				HttpServlet class
==============================================================================================
The HttpServlet class extends the GenericServlet class and implements Serializable interface. It provides http specific methods such as doGet, doPost, doHead, doTrace etc.

Methods of HttpServlet class
===================================================================
There are many methods in HttpServlet class. They are as follows:
1.		public void service(ServletRequest req,ServletResponse res) dispatches the request to 			the protected service method by converting the request and response object into http 			type.
2.		protected void service(HttpServletRequest req, HttpServletResponse res) receives the 			request from the service method, and dispatches the request to the doXXX() method 				depending on the incoming http request type.
3.		protected void doGet(HttpServletRequest req, HttpServletResponse res) handles the GET 			request. It is invoked by the web container.
4.		protected void doPost(HttpServletRequest req, HttpServletResponse res) handles the POST 		request. It is invoked by the web container.
5.		protected void doHead(HttpServletRequest req, HttpServletResponse res) handles the HEAD 		request. It is invoked by the web container.
6.		protected void doOptions(HttpServletRequest req, HttpServletResponse res) handles the 			OPTIONS request. It is invoked by the web container.
7.		protected void doPut(HttpServletRequest req, HttpServletResponse res) handles the PUT 			request. It is invoked by the web container.
8.		protected void doTrace(HttpServletRequest req, HttpServletResponse res) handles the 			TRACE request. It is invoked by the web container.
9.		protected void doDelete(HttpServletRequest req, HttpServletResponse res) handles the 			DELETE request. It is invoked by the web container.
10.	protected long getLastModified(HttpServletRequest req) returns the time when 						HttpServletRequest was last modified since midnight January 1, 1970 GMT.

=============================================================================================

Example of HttpServlet class:
----------------------------------------------------
package controller;
import javax.servlet.http.*;
import java.io.*;

public class HttpServletExample extends HttpServlet 
{
//    public void doGet(HttpServletRequest request,HttpServletResponse response)throws IOException
//    {
//        PrintWriter out=response.getWriter();
//        response.setContentType("text/html");
//        String data=request.getParameter("data");//get value of data variable from the url
//        out.print("<h3>Welcome to httpservlet example get :"+data+"</h3>");
//        System.out.println("Get");
//    }
     public void doPost(HttpServletRequest request,HttpServletResponse response)throws IOException
    {
        PrintWriter out=response.getWriter();
        response.setContentType("text/html");
        
       String data=request.getParameter("data");//get value of data variable from the url error in case of doPost()
        out.print("<h3>Welcome to httpservlet example get :"+data+"</h3>");
         System.out.println("Post");
    }
    
   
}
===================================================================================================================
Example to receive data from html form to servlet:
------------------------------------------------------
1. create index.html file and create form
<!DOCTYPE html>
<html>
    <head>
        <title>SignUp</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <style>
            /* form is a id name here */
            form
            {
                margin-left: 25%;
                margin-right: 25%;
                margin-top: 2%;
                box-shadow: 1px 1px 5px 5px #9e9cd3;;
                padding: 20px;
            }
        </style>
    </head>
    <body>
        <form action="SignUpBackend" method="post" onsubmit="confirm('Do you want to submit?');">
            <center><h4>Sign Up Form</h4></center>
            <div class="form-group">
                <label for="exampleInputEmail1">User Name</label>
                <input type="text" name="username" class="form-control" id="exampleInputUser1" aria-describedby="emailHelp" placeholder="Enter email">
                <small id="emailHelp" class="form-text text-muted">We'll never share your user name with anyone else.</small>
            </div>
            <div class="form-group">
                <label for="exampleInputEmail1">Email address</label>
                <input type="email" name="useremail" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Password</label>
                <input type="password" name="userpassword" class="form-control" id="exampleInputPassword1" placeholder="Password">
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="exampleCheck1">
                <label class="form-check-label" for="exampleCheck1">Check me out</label>
            </div>
            <input type="submit" class="btn btn-primary" value="Submit"/>
        </form>
        
    
    </body>
</html>

2. Create HttpServlet class RegisterBackend.java(Servlet) file 
package controller;
import javax.servlet.http.*;
import java.io.*;

public class RegisterBackend extends HttpServlet 
{
    public void doPost(HttpServletRequest request,HttpServletResponse response)throws IOException
    {
        PrintWriter out=response.getWriter();
        response.setContentType("text/html");
        
        String user=request.getParameter("username");//
        String email=request.getParameter("email");
        String pass=request.getParameter("pass");
        
        out.print("<h3>Details Are :</h3>");
        out.print("User Name :"+user);
        out.print("Email :"+email);
        out.print("Password :"+pass);
        
    }
  
}


==================================================================================================================
Let's try Front-end and Back-end Project using servlet and store data in database's table  Example:
=================================================================================================================
1. Create Project as "FrontEndAndBackEndExample" name
2. Create index.html file
<!DOCTYPE html>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<html>
    <head>
        <title>Home</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        
        <style>
            /*Internal style Sheet*/
          a
          {
              color:white;
          }
        </style>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-light" style="background-color:#5e5ee2;;">
            <a class="navbar-brand" href="#" style=" color:white;">EMS</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="#" style=" color:white;" target="contentarea">Home <span class="sr-only">(current)</span></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="SignUp.html" style=" color:white;" target="contentarea">SignUp</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style=" color:white;">
                            Employees
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="#" target="contentarea">Add Employee</a>
                            <a class="dropdown-item" href="#" target="contentarea">Update Employee</a>
                            <a class="dropdown-item" href="#" target="contentarea">Delete Employee</a>
                                <div class="dropdown-divider"></div>
                           <a class="dropdown-item" href="#" target="contentarea">View Employee</a>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="LoginForm.html" style=" color:white;" target="contentarea">Login</a>
                    </li>
                </ul>
                <form class="form-inline my-2 my-lg-0">
                    <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit" style=" color:white;">Search</button>
                </form>
            </div>
        </nav>
        <iframe name="contentarea" style="height: 600px; width: 100%;"></iframe>
    </body>
</html>

3. Create SignUp.html(Frontend)
<!DOCTYPE html>
<html>
    <head>
        <title>SignUp</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <style>
            /* form is a id name here */
            form
            {
                margin-left: 25%;
                margin-right: 25%;
                margin-top: 2%;
                box-shadow: 1px 1px 5px 5px #9e9cd3;;
                padding: 20px;
            }
        </style>
    </head>
    <body>
        <form action="SignUpBackend" method="post" onsubmit="confirm('Do you want to submit?');">
            <center><h4>Sign Up Form</h4></center>
            <div class="form-group">
                <label for="exampleInputEmail1">User Name</label>
                <input type="text" name="username" class="form-control" id="exampleInputUser1" aria-describedby="emailHelp" placeholder="Enter email">
                <small id="emailHelp" class="form-text text-muted">We'll never share your user name with anyone else.</small>
            </div>
            <div class="form-group">
                <label for="exampleInputEmail1">Email address</label>
                <input type="email" name="useremail" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Password</label>
                <input type="password" name="userpassword" class="form-control" id="exampleInputPassword1" placeholder="Password">
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="exampleCheck1">
                <label class="form-check-label" for="exampleCheck1">Check me out</label>
            </div>
            <input type="submit" class="btn btn-primary" value="Submit"/>
        </form>
        
    
    </body>
</html>

4.Create controller package under source package
package 'controller'
5.create backend of SignUp.html
file :SignUpBackend.java(Servlet)
package controller;
import javax.servlet.http.*;
import java.io.*;
import java.sql.*;

public class SignUpBackend extends HttpServlet 
{
    public void doPost(HttpServletRequest request,HttpServletResponse response)throws IOException
    {
        PrintWriter out=response.getWriter();
        response.setContentType("text/html");
        
        String username = request.getParameter("username");
        String useremail = request.getParameter("useremail");
        String userpassword = request.getParameter("userpassword");
       
        Connection con=null;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/lpu", "root", "root");
            
            String insert="insert into employee(firstname,email,password)values(?,?,?)";
            
            PreparedStatement ps=con.prepareStatement(insert);
            ps.setString(1, username);
            ps.setString(2,useremail);
            ps.setString(3, userpassword);
            
            int status=ps.executeUpdate();
            if(status>0)
            {
                out.print("<h3>You have registered successfully. Thank You!..</h3>");
            }
            else
            {
                out.print("<h3>You have not registered successfully. please check your data.</h3>");
            }
            
        }
        catch(Exception e)
        {
             out.print(e);
        }
        finally
        {
            try
            {
                con.close();
            }
            catch(Exception e)
            {
               out.print(e);
            }
        }

    }
}

5.Create LoginForm.html(frontend)
<!DOCTYPE html>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<html>
    <head>
        <title>TODO supply a title</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
           <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <style>
            /* form is a id name here */
            form
            {
                margin-left: 25%;
                margin-right: 25%;
                margin-top: 2%;
                box-shadow: 1px 1px 5px 5px #9e9cd3;;
                padding: 20px;
            }
        </style>
    </head>
    <body>
        <form action="Validate" method="post">
            <center><h4>Login Form</h4></center>
            <div class="form-group">
                <label for="exampleInputEmail1">User Email</label>
                <input type="email" name="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Password</label>
                <input type="password" name="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="exampleCheck1">
                <label class="form-check-label" for="exampleCheck1">Check me out</label>
            </div>
            <input type="submit" class="btn btn-primary" value="Login"/>
        </form>
      
    </body>
</html>

7. Create Backend page for LoginForm.html

File :Validate.java(Servlet)
package controller;

import java.io.*;
import javax.servlet.http.*;
import java.sql.*;

public class Validate extends HttpServlet 
{
    public void doPost(HttpServletRequest request,HttpServletResponse response)throws IOException
    {
        PrintWriter out=response.getWriter();
        response.setContentType("text/html");
        
        String email=request.getParameter("email");
        String pass=request.getParameter("password");
        
        Connection con=null;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/lpu", "root", "root");
            String sqlcheck="select * from employee where email='"+email+"' and password='"+pass+"' ";
            Statement smt=con.createStatement();
            ResultSet rs=smt.executeQuery(sqlcheck);
            boolean status=false;
            while(rs.next())
            {
                status=true;
            }
            if(status==true)
            {
                out.print("Welcome to the dashboard");
            }
            else
            {
                 out.print("invalid username and password");
            }
            
        }
        catch(Exception e)
        {
            out.print(e);
        }
        finally
        {
            try
            {
                con.close();
            }
            catch(Exception e)
            {
                out.print(e);
            }
        }
        
    }
    
}

8. Execute project check all SignUp and LoginForm page.
=====================================================================================================================
